type RoomPhoto implements Node {
  id: ID!
  name: String!
  cdnUrl: String!
  uuid: String!
  count: Int!
  isImage: Boolean!
  isStored: Boolean!
  size: Int!

  room: Room!

  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  allRoomPhotos(
    filter: RoomPhotoFilter,
    orderBy: RoomPhotoOrderBy,
    skip: Int,
    after: String,
    before: String,
    first: Int,
    last: Int
  ): [RoomPhoto!]!

  RoomPhoto(id: ID): RoomPhoto

  _allRoomPhotosMeta(
    filter: RoomPhotoFilter,
    orderBy: RoomPhotoOrderBy,
    skip: Int,
    after: String,
    before: String,
    first: Int,
    last: Int,
  ): _QueryMeta!
}

type Mutation {
  createRoomPhoto(input: CreateRoomPhotoInput!): CreateRoomPhotoPayload
  updateRoomPhoto(input: UpdateRoomPhotoInput!): UpdateRoomPhotoPayload
  deleteRoomPhoto(input: DeleteRoomPhotoInput!): DeleteRoomPhotoPayload
}
